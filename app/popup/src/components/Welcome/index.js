import React, { Component } from 'react';
import { NavLink } from 'react-router-dom';
import './Welcome.css';

class Welcome extends Component {
    constructor(props) {
        super(props);

        this.state = {
            password: '',
            passwordRepeat: '',
        };
    }

    handlePasswordChange = (e) => this.setState({ [e.target.name]: e.target.value });

    createPasswordCheck() {
        console.log(this.state.password, this.state.passwordRepeat);
        let { password, passwordRepeat } = this.state;
        if (password.length > 0) {
            if (password === passwordRepeat) {
                return ' ';
            }
            return 'Passwords do not match.';
        }
        return ' ';
    }

    renderInputs() {
        // if account exists, decrypt, otherwise set password
        if (false) {
            return (
                <div>
                    <div className="decryptContainer">
                        <input 
                            placeholder="Enter Password to Decrypt Wallet..."
                            className="textInput"
                            type="password"
                            value={this.state.password}
                            onChange={this.handlePasswordChange}
                        />
                        <NavLink to="/main/transactions">
                            <div className="loginBtn button black">Decrypt</div>
                        </NavLink>
                    </div>
                    <div className="restoreWallet">Restore from seed phrase</div>
                </div>
            );
        } else {
            return (
                <div className="decryptContainer">
                    <input 
                        placeholder="Enter Password to Encrypt Extension..."
                        className="textInput"
                        type="password"
                        name="password"
                        value={this.state.password}
                        onChange={this.handlePasswordChange}
                    />
                    <input 
                        placeholder="Enter Password Again to Encrypt Extension..."
                        className="textInput"
                        type="password"
                        name="passwordRepeat"
                        value={this.state.passwordRepeat}
                        onChange={this.handlePasswordChange}
                    />
                    <span>{ this.createPasswordCheck() }</span>
                    <NavLink to="/import">
                        <div className="loginBtn button black">Continue</div>
                    </NavLink>
                </div>
            );
        }
    }

    render() {
        return (
            <div className="welcome">
                <svg viewBox="0 0 197 134" className="welcomeLogo">
                    <defs>
                        <linearGradient x1="100%" y1="0%" x2="0%" y2="100.951117%" id="linearGradient-1">
                            <stop stop-color="#ED3F21" offset="0%"></stop>
                            <stop stop-color="#DC2C73" offset="100%"></stop>
                        </linearGradient>
                    </defs>
                    <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                        <g transform="translate(-113.000000, -118.000000)">
                            <g transform="translate(113.000000, 113.000000)">
                                <path d="M10.4953816,121.160109 L10.4953816,138.308485 L5.8702982,138.308485 L5.8702982,121.160109 L0,121.160109 L0,117.055444 L16.3656798,117.055444 L16.3656798,121.160109 L10.4953816,121.160109 Z M36.5559479,124.109386 C36.5559479,127.514754 35.2415677,129.714022 32.6127678,130.707254 L37.8604586,138.308485 L32.1680482,138.308485 L27.5726128,131.528187 L24.3706319,131.528187 L24.3706319,138.308485 L19.7455485,138.308485 L19.7455485,117.055444 L27.6022607,117.055444 C30.824023,117.055444 33.1217178,117.612862 34.4954139,118.727715 C35.8691101,119.842568 36.5559479,121.63644 36.5559479,124.109386 Z M27.7505006,127.423523 C29.3317336,127.423523 30.4089324,127.160016 30.9821294,126.632995 C31.5553264,126.105973 31.8419206,125.269846 31.8419206,124.124589 C31.8419206,122.979331 31.5454438,122.193878 30.9524814,121.768207 C30.3595191,121.342536 29.3218505,121.129704 27.8394445,121.129704 L24.3706319,121.129704 L24.3706319,127.423523 L27.7505006,127.423523 Z M56.9537517,127.575547 C56.9537517,125.670163 56.3607983,124.048583 55.1748735,122.71076 C53.9889487,121.372937 52.5312714,120.704035 50.8017978,120.704035 C49.0723242,120.704035 47.6146469,121.372937 46.4287221,122.71076 C45.2427974,124.048583 44.6498439,125.665095 44.6498439,127.560345 C44.6498439,129.455594 45.2427974,131.067039 46.4287221,132.394727 C47.6146469,133.722416 49.0723242,134.38625 50.8017978,134.38625 C52.5312714,134.38625 53.9889487,133.722416 55.1748735,132.394727 C56.3607983,131.067039 56.9537517,129.460662 56.9537517,127.575547 Z M58.5250942,135.389612 C56.4299605,137.477427 53.8506128,138.521319 50.7869738,138.521319 C47.7233349,138.521319 45.1439872,137.47236 43.0488535,135.37441 C40.9537197,133.27646 39.9061686,130.66673 39.9061686,127.545142 C39.9061686,124.423555 40.9537197,121.813825 43.0488535,119.715875 C45.1439872,117.617925 47.7233349,116.568966 50.7869738,116.568966 C53.8506128,116.568966 56.4299605,117.617925 58.5250942,119.715875 C60.6202279,121.813825 61.6677791,124.423555 61.6677791,127.545142 C61.6677791,130.66673 60.6202279,133.281527 58.5250942,135.389612 Z M80.0791689,117.055444 L84.7042523,117.055444 L84.7042523,138.308485 L80.0791689,138.308485 L70.2063947,124.991129 L70.2063947,138.308485 L65.5813112,138.308485 L65.5813112,117.055444 L69.909915,117.055444 L80.0791689,130.737659 L80.0791689,117.055444 Z M96.2669609,129.278223 L99.9433093,117.055444 L104.775929,117.055444 L108.422629,129.278223 L112.543697,117.055444 L117.554204,117.055444 L110.320099,138.308485 L106.880934,138.308485 L102.344795,123.531693 L97.8383034,138.308485 L94.3991388,138.308485 L87.1650339,117.055444 L92.175541,117.055444 L96.2669609,129.278223 Z M133.6827,138.308485 L131.755582,133.717342 L123.068726,133.717342 L121.141608,138.308485 L116.220045,138.308485 L125.173732,117.055444 L129.650576,117.055444 L138.604263,138.308485 L133.6827,138.308485 Z M127.426978,123.379668 L124.817957,129.551867 L130.006352,129.551867 L127.426978,123.379668 Z M148.269502,121.160109 L148.269502,138.308485 L143.644418,138.308485 L143.644418,121.160109 L137.77412,121.160109 L137.77412,117.055444 L154.1398,117.055444 L154.1398,121.160109 L148.269502,121.160109 Z M167.036667,134.112606 C169.309689,134.112606 171.16761,133.190332 172.610486,131.345758 L175.575283,134.477465 C173.223198,137.193651 170.451141,138.551724 167.259027,138.551724 C164.066913,138.551724 161.438152,137.517967 159.372667,135.450422 C157.307181,133.382877 156.274454,130.773147 156.274454,127.621155 C156.274454,124.469162 157.326946,121.839163 159.431963,119.731077 C161.536979,117.622992 164.111385,116.568966 167.155259,116.568966 C170.55491,116.568966 173.401087,117.896634 175.693874,120.55201 L172.818021,123.896552 C171.355381,122.031707 169.53699,121.099299 167.362795,121.099299 C165.623438,121.099299 164.136113,121.682054 162.900775,122.847582 C161.665437,124.01311 161.047777,125.584015 161.047777,127.560345 C161.047777,129.536675 161.630848,131.122782 162.797007,132.318715 C163.963167,133.514648 165.376372,134.112606 167.036667,134.112606 Z M192.089202,117.055444 L196.714286,117.055444 L196.714286,138.308485 L192.089202,138.308485 L192.089202,129.947131 L183.847066,129.947131 L183.847066,138.308485 L179.221983,138.308485 L179.221983,117.055444 L183.847066,117.055444 L183.847066,125.933681 L192.089202,125.933681 L192.089202,117.055444 Z" fill="#828282"></path>
                                <g transform="translate(94.302728, 50.975660) rotate(-30.000000) translate(-94.302728, -50.975660) translate(56.802728, 13.975660)" fillRule="nonzero" stroke="#828282" strokeWidth="2">
                                    <path d="M74.6973738,36.6783018 L74.7038769,35.703214 C74.7320572,33.5721398 74.749399,31.7322683 73.5875025,30.5343664 C73.184307,30.1218292 72.6770611,29.8504813 72.0766034,29.6872313 L72.0766034,13.2364857 C72.0766034,5.93656383 66.2432759,0 59.0702991,0 L13.0063044,0 C5.8311598,0 0,5.93656383 0,13.2364857 L0,60.1157058 C0,67.4156276 5.8311598,73.3521915 13.0063044,73.3521915 L59.0702991,73.3521915 C66.2432759,73.3521915 72.0766034,67.4156276 72.0766034,60.1157058 L72.0766034,43.6649602 C72.6770611,43.5017102 73.1908102,43.2303622 73.5875025,42.8178251 C74.7472313,41.6199231 74.7255541,39.7800516 74.7038769,37.6489774 L74.6973738,36.6783018 Z"></path>
                                </g>
                                <g transform="translate(72.000000, 31.000000)" fill="url(#linearGradient-1)" fillRule="nonzero">
                                    <path d="M34.4641926,8.32828667 C34.4207696,8.29518168 34.3773465,8.26207669 34.3230676,8.2289717 C34.1059522,8.06344675 33.8562694,7.88688681 33.5523078,7.78757184 C28.2764023,6.48544225 22.9353623,5.16124266 17.7680146,3.88118307 C13.0783209,2.72250843 8.39948299,1.56383379 3.70978929,0.405159158 C3.59037579,0.372054168 3.47096229,0.338949178 3.34069302,0.305844189 C2.9173179,0.184459227 2.42880814,0.0520392686 1.90773106,0.118249248 C1.75575024,0.140319241 1.62548098,0.195494224 1.50606748,0.272739199 L1.37579821,0.383089165 C1.16953853,0.581719102 1.06098081,0.835524022 1.00670195,0.978978977 L0.974134628,1.57486879 C3.95947205,10.0938861 6.99908834,18.6570434 9.9301469,26.9443258 C12.1881476,33.3225538 14.5329944,39.9325167 16.8235624,46.4210947 C16.9646875,46.8624946 17.366351,47.1494045 17.8657166,47.1935445 C18.4410725,47.1935445 18.8535919,46.9618095 19.0598515,46.5866196 L27.6576233,33.8411987 C29.7527874,30.7403646 31.8479515,27.6284956 33.9431156,24.5276616 C34.8007216,23.258637 35.6583276,21.9785774 36.5159336,20.7095528 C37.9271841,18.6129034 39.3818576,16.4500441 40.8256753,14.3423598 L40.9016657,14.2320098 C40.934233,13.713365 40.9450888,12.9188452 40.315454,12.4995154 C38.4374054,11.1642808 36.4290875,9.74076622 34.4641926,8.32828667 Z M23.9393585,20.424906 C25.16578,19.1140139 26.4032504,17.7921058 27.6296719,16.4812136 C29.165461,14.8288285 30.7675432,13.121364 32.3364788,11.4469471 L32.3696254,11.4138994 C32.5022115,11.237645 32.6679441,11.0724064 32.8447256,10.896152 C32.9662629,10.7749771 33.098849,10.6538022 33.2203862,10.5105955 C34.0380006,11.0724064 34.8666638,11.6452333 35.6621804,12.2070442 C36.2367203,12.6146325 36.8223089,13.0222208 37.4189464,13.4298092 C34.988201,14.66359 32.5574557,15.9304186 30.2040522,17.1641995 C28.1489675,18.2327418 26.0496874,19.3343319 23.9393585,20.424906 Z M20.4613059,21.9120526 C17.375903,18.1142368 14.2255443,14.2615393 11.1726194,10.540558 C9.78689459,8.85020066 8.39034383,7.148867 7.00461904,5.45850969 C6.67983979,5.08531392 6.37671249,4.69016546 6.0735852,4.31696969 C5.87871765,4.06451373 5.67302412,3.82303411 5.4673306,3.57057815 C6.72314369,3.89986853 7.98978276,4.20720623 9.23476987,4.50356757 C10.3281933,4.76699988 11.4649207,5.04140854 12.5799961,5.32679354 C18.8590616,6.87445835 25.148953,8.42212316 31.4280184,9.96978797 C29.3386053,12.2309153 27.2383662,14.5249716 25.2030829,16.7421936 C23.6549685,18.4435272 22.0527242,20.1887663 20.4613059,21.9120526 Z M20.1900148,34.303078 C20.2884658,33.370636 20.3869169,32.4162543 20.4853679,31.5057521 C20.638514,30.0467548 20.802599,28.5329078 20.9338671,27.0519706 L20.9666841,26.7886929 C21.0760741,25.8452811 21.1854642,24.8689595 21.2510982,23.892638 C21.3714273,23.8268185 21.5026953,23.7609991 21.6449024,23.7061496 C21.8089874,23.6293602 21.9730725,23.5635408 22.1371575,23.4648116 C24.6640675,22.1374531 27.1909775,20.8100946 29.7288265,19.493706 C32.2557364,18.1773174 34.8482804,16.8170491 37.4189464,15.4677508 C35.0779995,18.8684214 32.7261136,22.3020017 30.4508007,25.6478228 C28.492719,28.510968 26.4799422,31.4618725 24.4781044,34.3688974 C23.6904961,35.5317073 22.8700708,36.7164571 22.0934015,37.8573272 C21.2182812,39.1298362 20.3212829,40.435255 19.4461625,41.7406737 C19.5555526,40.424285 19.6868206,39.0969265 19.8290277,37.8024777 C19.9493567,36.6506377 20.0806248,35.4658879 20.1900148,34.303078 Z M3.96959861,4.5620092 C6.94798226,8.17325527 9.948428,11.8066562 12.8716564,15.3292828 C14.3829103,17.1570607 15.8941642,18.9737611 17.4054182,20.8126165 C17.7032565,21.1560172 18.0010949,21.5215728 18.2879022,21.8760509 C18.6629579,22.3302261 19.0380136,22.8065561 19.4461625,23.2607312 C19.3137899,24.4017077 19.2034794,25.5537617 19.0821378,26.6615058 C19.0049205,27.4369268 18.9277031,28.2123477 18.8394547,28.9988461 C18.8063616,29.5084084 18.7401753,30.0068933 18.68502,30.4943008 C18.6078027,31.1700247 18.4313059,32.6987117 18.4313059,32.6987117 C18.2217159,35.0138971 17.9790328,37.2736952 17.7473807,39.4670287 C17.6481013,40.375379 17.5598529,41.3058841 17.4605734,42.2363892 C17.4054182,42.0702276 17.3392319,41.9040659 17.2840766,41.7489817 C17.1186109,41.3058841 16.9531451,40.8406315 16.7987104,40.3864564 L15.618388,37.0964561 C11.8788618,26.6504284 8.13933571,16.2154781 4.39980958,5.75837293 C4.25640592,5.35958502 4.10197122,4.94971967 3.96959861,4.5620092 Z"></path>
                                </g>
                            </g>
                        </g>
                    </g>
                </svg>
                { this.renderInputs() }
            </div>
        );
    }
}

export default Welcome;
